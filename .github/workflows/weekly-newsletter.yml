name: Developer Tools Newsletter (Every Other Day)

on:
  # Run every other day at 10 AM UTC (Monday, Wednesday, Friday, Sunday)
  schedule:
    - cron: '0 10 * * 1,3,5,0'
  
  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  generate-newsletter:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install openai || echo "OpenAI package installation failed, continuing with fallback"
        
    - name: Generate newsletter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
      run: |
        echo "Starting newsletter generation..."
        python3 automation/simple_automation.py || python automation/simple_automation.py
        echo "Newsletter generation completed"
        ls -la newsletter/ || echo "Newsletter directory not found"
        
    - name: Commit and push newsletter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Configuring git..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        echo "Checking for newsletter files..."
        ls -la newsletter/ || echo "Newsletter directory not found"
        
        echo "Adding newsletter files..."
        git add newsletter/ || echo "No newsletter files to add"
        
        echo "Checking git status..."
        git status
        
        echo "Attempting to commit..."
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-generated newsletter - $(date +%Y-%m-%d)"
          echo "Pushing changes..."
          git push
        fi
        
    - name: Create Issue with Newsletter Content
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            if (!fs.existsSync('newsletter')) {
              console.log('Newsletter directory does not exist');
              return;
            }

            const newsletterDir = 'newsletter';
            const files = fs.readdirSync(newsletterDir)
              .filter(file => file.startsWith('auto-generated-week-'))
              .sort()
              .reverse();

            if (files.length === 0) {
              console.log('No newsletter files found');
              return;
            }

            const latestFile = files[0];
            const newsletterContent = fs.readFileSync(path.join(newsletterDir, latestFile), 'utf8');

            const issueBody = "## Your Developer Tools Newsletter is Ready!\n\n" +
              "> **Hey GitHub visitors!** This is a **FREE preview** of our developer tools newsletter. Want the **full experience** with exclusive founder interviews, live demos, and early access to trending tools?\n" +
              "[**Subscribe here for free!**](YOUR_NEWSLETTER_LINK)\n\n" +
              "**Copy-paste ready content below:**\n\n---\n\n" +
              newsletterContent + "\n\n---\n\n" +
              "## Next Steps (For Newsletter Owner):\n\n" +
              "1. **Copy** the content above\n" +
              "2. **Paste** into your newsletter editor (Substack, ConvertKit, etc.)\n" +
              "3. **Send** to your subscribers!\n\n---\n\n" +
              "## Want More Premium Content Like This?\n\n" +
              "### **Subscribe to Our Newsletter for Exclusive Access:**\n" +
              "- **Founder Interviews**\n" +
              "- **Live Product Demos**\n" +
              "- **Monthly Webinars**\n" +
              "- **Early Access**\n" +
              "- **Deep Analysis**\n" +
              "- **Community**\n\n" +
              "**[Subscribe Free - No Spam, Just Value](YOUR_NEWSLETTER_LINK)**\n\n---\n\n" +
              "### File Location: " + latestFile + "\n" +
              "*This issue was automatically created by our newsletter automation system*\n\n" +
              "**Like what you see? Star this repo and follow for daily updates!**";

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Newsletter Ready - " + new Date().toISOString().slice(0, 10),
              body: issueBody,
              labels: ['newsletter', 'automation', 'ready-to-send']
            });

          } catch (error) {
            console.error('Error in newsletter automation:', error);
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Newsletter Automation Error - " + new Date().toISOString().slice(0, 10),
              body: "## Newsletter Automation Encountered an Error\n\n" +
                "**Error Details:**\n```\n" + error.message + "\n```\n\n" +
                "**Time:** " + new Date().toISOString() + "\n\n" +
                "**Next Steps:**\n" +
                "1. Check the GitHub Actions logs for more details\n" +
                "2. Manually run the automation script if needed\n" +
                "3. Contact support if the issue persists\n\n" +
                "This error issue was automatically created by the newsletter automation system.",
              labels: ['bug', 'automation', 'needs-attention']
            });
          }