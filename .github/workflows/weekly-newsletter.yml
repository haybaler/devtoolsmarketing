name: Developer Tools Newsletter (Every Other Day)

on:
  # Run every other day at 10 AM UTC (Monday, Wednesday, Friday, Sunday)
  schedule:
    - cron: '0 10 * * 1,3,5,0'
  
  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  generate-newsletter:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Generate newsletter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
      run: |
        python automation/simple_automation.py
        
    - name: Commit and push newsletter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add newsletter/auto-generated-week-*.md
        git commit -m "🤖 Auto-generated newsletter - $(date +%Y-%m-%d)" || exit 0
        git push
        
    - name: Create Issue with Newsletter Content
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Find the latest newsletter file
          const newsletterDir = 'newsletter';
          const files = fs.readdirSync(newsletterDir)
            .filter(file => file.startsWith('auto-generated-week-'))
            .sort()
            .reverse();
          
          if (files.length > 0) {
            const latestFile = files[0];
            const newsletterContent = fs.readFileSync(path.join(newsletterDir, latestFile), 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `📧 Newsletter Ready - ${new Date().toISOString().slice(0, 10)}`,
              body: `## 🚀 Your Developer Tools Newsletter is Ready!

**Copy-paste ready content below:**

---

${newsletterContent}

---

## 📋 Next Steps:
1. **Copy** the content above
2. **Paste** into your newsletter editor (Substack, ConvertKit, etc.)
3. **Send** to your subscribers!

### 📁 File Location: \`${latestFile}\`

*This issue was automatically created by the weekly newsletter automation.*`,
              labels: ['newsletter', 'automation', 'ready-to-send']
            });
          }